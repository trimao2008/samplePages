{"ast":null,"code":"var _jsxFileName = \"/Users/trimao/Documents/samplePages/src/projects/ProjectPage.tsx\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect, useState } from \"react\";\nimport ProjectList from \"./ProjectList\";\nimport { projectAPI } from \"./ProjectApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectPages() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(Boolean);\n  const [error, setError] = useState(undefined);\n  const saveProject = project => {\n    let updatedProjects = projects.map(p => {\n      return p.id === project.id ? project : p;\n    });\n    setProjects(updatedProjects);\n  };\n  useEffect(() => {\n    async function loadProjects() {\n      setLoading(true);\n      try {\n        const data = await projectAPI.get(1);\n        setError('');\n        setProjects(data);\n      } catch (e) {\n        if (e instanceof Error) {\n          setError(e.message);\n        }\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadProjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProjectList, {\n      onSave: saveProject,\n      projects: projects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"spinner primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(ProjectPages, \"Qwz16q0p72eH3gg1stvWnsdrt0w=\");\n_c = ProjectPages;\nexport default ProjectPages;\nvar _c;\n$RefreshReg$(_c, \"ProjectPages\");","map":{"version":3,"names":["Fragment","useEffect","useState","ProjectList","projectAPI","jsxDEV","_jsxDEV","ProjectPages","_s","projects","setProjects","loading","setLoading","Boolean","error","setError","undefined","saveProject","project","updatedProjects","map","p","id","loadProjects","data","get","e","Error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSave","className","_c","$RefreshReg$"],"sources":["/Users/trimao/Documents/samplePages/src/projects/ProjectPage.tsx"],"sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\nimport { MOCK_PROJECTS } from \"./MockProjects\";\nimport { Project } from \"./Project\";\nimport ProjectList from \"./ProjectList\";\nimport { projectAPI } from \"./ProjectApi\";\n\nfunction ProjectPages() {\n    const [projects, setProjects] = useState<Project[]>([]);\n    const [loading, setLoading] = useState(Boolean);\n    const [error, setError] = useState<string | undefined>(undefined);\n\n\n    const saveProject = (project: Project) => {\n        let updatedProjects = projects.map((p: Project) => {\n            return p.id === project.id ? project : p;\n        });\n        setProjects(updatedProjects);\n    }\n\n    useEffect(() => {\n        async function loadProjects() {\n            setLoading(true);\n            try {\n                const data = await projectAPI.get(1);\n                setError('');\n                setProjects(data);\n            } catch (e) {\n                if (e instanceof Error) {\n                    setError(e.message);\n                }\n            } finally {\n                setLoading(false);\n            }\n        }\n        loadProjects();\n    }, []);\n\n    return (\n        <Fragment>\n            <h1>Projects</h1>\n\n            <ProjectList onSave={saveProject} projects={projects} />\n\n            {loading && (\n                <div className=\"center-page\">\n                    <span className=\"spinner primary\"></span>\n                    <p>Loading...</p>\n                </div>\n            )}\n        </Fragment>\n    );\n}\n\nexport default ProjectPages;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAGrD,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAACW,OAAO,CAAC;EAC/C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAqBc,SAAS,CAAC;EAGjE,MAAMC,WAAW,GAAIC,OAAgB,IAAK;IACtC,IAAIC,eAAe,GAAGV,QAAQ,CAACW,GAAG,CAAEC,CAAU,IAAK;MAC/C,OAAOA,CAAC,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,GAAGJ,OAAO,GAAGG,CAAC;IAC5C,CAAC,CAAC;IACFX,WAAW,CAACS,eAAe,CAAC;EAChC,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACZ,eAAesB,YAAYA,CAAA,EAAG;MAC1BX,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACA,MAAMY,IAAI,GAAG,MAAMpB,UAAU,CAACqB,GAAG,CAAC,CAAC,CAAC;QACpCV,QAAQ,CAAC,EAAE,CAAC;QACZL,WAAW,CAACc,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOE,CAAC,EAAE;QACR,IAAIA,CAAC,YAAYC,KAAK,EAAE;UACpBZ,QAAQ,CAACW,CAAC,CAACE,OAAO,CAAC;QACvB;MACJ,CAAC,SAAS;QACNhB,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ;IACAW,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIjB,OAAA,CAACN,QAAQ;IAAA6B,QAAA,gBACLvB,OAAA;MAAAuB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjB3B,OAAA,CAACH,WAAW;MAAC+B,MAAM,EAAEjB,WAAY;MAACR,QAAQ,EAAEA;IAAS;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEvDtB,OAAO,iBACJL,OAAA;MAAK6B,SAAS,EAAC,aAAa;MAAAN,QAAA,gBACxBvB,OAAA;QAAM6B,SAAS,EAAC;MAAiB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzC3B,OAAA;QAAAuB,QAAA,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEnB;AAACzB,EAAA,CA7CQD,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AA+CrB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}