{"ast":null,"code":"import { Project } from \"./Project\";\nconst baseUrl = 'http://localhost:4000';\nconst url = `${baseUrl}/projects`;\nfunction translateStatusToErrorMessage(status) {\n  switch (status) {\n    case 401:\n      return 'Please login again.';\n    case 403:\n      return 'You do not have permission to view the project(s).';\n    default:\n      return 'There was an error retrieving the project(s). Please try again.';\n  }\n}\nfunction checkStatus(response) {\n  if (response.ok) {\n    return response;\n  } else {\n    const httpErrorInfo = {\n      status: response.status,\n      statusText: response.statusText,\n      url: response.url\n    };\n    console.log(`log server http error: ${JSON.stringify(httpErrorInfo)}`);\n    let errorMessage = translateStatusToErrorMessage(httpErrorInfo.status);\n    throw new Error(errorMessage);\n  }\n}\nfunction parseJSON(response) {\n  return response.json();\n}\n\n// eslint-disable-next-line\nfunction delay(ms) {\n  return function (x) {\n    return new Promise(resolve => setTimeout(() => resolve(x), ms));\n  };\n}\nfunction convertToProjectModels(data) {\n  let projects = data.map(convertToProjectModel);\n  return projects;\n}\nfunction convertToProjectModel(item) {\n  return new Project(item);\n}\nconst projectAPI = {\n  get(page = 1, limit = 20) {\n    return fetch(`${url}?_page=${page}&_limit=${limit}&_sort=name`).then(delay(600)).then(checkStatus).then(parseJSON).then(convertToProjectModels).catch(error => {\n      console.log('log client error ' + error);\n      throw new Error('There was an error retrieving the projects. Please try again.');\n    });\n  },\n  put(project) {\n    return fetch(`${url}/${project.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(project),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(checkStatus).then(parseJSON).catch(error => {\n      console.log('log client error ' + error);\n      throw new Error('There was an error updating the project. Please try again.');\n    });\n  }\n};\nexport { projectAPI };","map":{"version":3,"names":["Project","baseUrl","url","translateStatusToErrorMessage","status","checkStatus","response","ok","httpErrorInfo","statusText","console","log","JSON","stringify","errorMessage","Error","parseJSON","json","delay","ms","x","Promise","resolve","setTimeout","convertToProjectModels","data","projects","map","convertToProjectModel","item","projectAPI","get","page","limit","fetch","then","catch","error","put","project","id","method","body","headers"],"sources":["/Users/trimao/Documents/samplePages/src/projects/ProjectApi.ts"],"sourcesContent":["import { error } from \"console\";\nimport { Project } from \"./Project\";\n\nconst baseUrl = 'http://localhost:4000';\nconst url = `${baseUrl}/projects`;\n\nfunction translateStatusToErrorMessage(status: number) {\n    switch (status) {\n        case 401:\n            return 'Please login again.';\n        case 403:\n            return 'You do not have permission to view the project(s).';\n        default:\n            return 'There was an error retrieving the project(s). Please try again.';\n    }\n}\n\nfunction checkStatus(response: any) {\n    if (response.ok) {\n        return response;\n    } else {\n        const httpErrorInfo = {\n            status: response.status,\n            statusText: response.statusText,\n            url: response.url,\n        };\n        console.log(`log server http error: ${JSON.stringify(httpErrorInfo)}`);\n        let errorMessage = translateStatusToErrorMessage(httpErrorInfo.status);\n        throw new Error(errorMessage);\n    }\n}\n\nfunction parseJSON(response: Response) {\n    return response.json();\n}\n\n// eslint-disable-next-line\nfunction delay(ms: number) {\n    return function (x: any): Promise<any> {\n        return new Promise((resolve) => setTimeout(() => resolve(x), ms));\n    };\n}\n\nfunction convertToProjectModels(data: any[]): Project[] {\n    let projects: Project[] = data.map(convertToProjectModel);\n    return projects;\n}\n\nfunction convertToProjectModel(item: any): Project {\n    return new Project(item);\n}\n\nconst projectAPI = {\n    get(page = 1, limit = 20) {\n        return fetch(`${url}?_page=${page}&_limit=${limit}&_sort=name`)\n            .then(delay(600))\n            .then(checkStatus)\n            .then(parseJSON)\n            .then(convertToProjectModels)\n            .catch((error: TypeError) => {\n                console.log('log client error ' + error);\n                throw new Error(\n                    'There was an error retrieving the projects. Please try again.'\n                );\n            });\n    },\n    put(project: Project) {\n        return fetch(`${url}/${project.id}`, {\n            method: 'PUT',\n            body: JSON.stringify(project),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(checkStatus)\n            .then(parseJSON)\n            .catch((error: TypeError) => {\n                console.log('log client error ' + error);\n                throw new Error(\n                    'There was an error updating the project. Please try again.'\n                );\n            })\n\n    }\n};\n\nexport { projectAPI };\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,WAAW;AAEnC,MAAMC,OAAO,GAAG,uBAAuB;AACvC,MAAMC,GAAG,GAAI,GAAED,OAAQ,WAAU;AAEjC,SAASE,6BAA6BA,CAACC,MAAc,EAAE;EACnD,QAAQA,MAAM;IACV,KAAK,GAAG;MACJ,OAAO,qBAAqB;IAChC,KAAK,GAAG;MACJ,OAAO,oDAAoD;IAC/D;MACI,OAAO,iEAAiE;EAChF;AACJ;AAEA,SAASC,WAAWA,CAACC,QAAa,EAAE;EAChC,IAAIA,QAAQ,CAACC,EAAE,EAAE;IACb,OAAOD,QAAQ;EACnB,CAAC,MAAM;IACH,MAAME,aAAa,GAAG;MAClBJ,MAAM,EAAEE,QAAQ,CAACF,MAAM;MACvBK,UAAU,EAAEH,QAAQ,CAACG,UAAU;MAC/BP,GAAG,EAAEI,QAAQ,CAACJ;IAClB,CAAC;IACDQ,OAAO,CAACC,GAAG,CAAE,0BAAyBC,IAAI,CAACC,SAAS,CAACL,aAAa,CAAE,EAAC,CAAC;IACtE,IAAIM,YAAY,GAAGX,6BAA6B,CAACK,aAAa,CAACJ,MAAM,CAAC;IACtE,MAAM,IAAIW,KAAK,CAACD,YAAY,CAAC;EACjC;AACJ;AAEA,SAASE,SAASA,CAACV,QAAkB,EAAE;EACnC,OAAOA,QAAQ,CAACW,IAAI,CAAC,CAAC;AAC1B;;AAEA;AACA,SAASC,KAAKA,CAACC,EAAU,EAAE;EACvB,OAAO,UAAUC,CAAM,EAAgB;IACnC,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAAC,MAAMD,OAAO,CAACF,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC;EACrE,CAAC;AACL;AAEA,SAASK,sBAAsBA,CAACC,IAAW,EAAa;EACpD,IAAIC,QAAmB,GAAGD,IAAI,CAACE,GAAG,CAACC,qBAAqB,CAAC;EACzD,OAAOF,QAAQ;AACnB;AAEA,SAASE,qBAAqBA,CAACC,IAAS,EAAW;EAC/C,OAAO,IAAI7B,OAAO,CAAC6B,IAAI,CAAC;AAC5B;AAEA,MAAMC,UAAU,GAAG;EACfC,GAAGA,CAACC,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,EAAE;IACtB,OAAOC,KAAK,CAAE,GAAEhC,GAAI,UAAS8B,IAAK,WAAUC,KAAM,aAAY,CAAC,CAC1DE,IAAI,CAACjB,KAAK,CAAC,GAAG,CAAC,CAAC,CAChBiB,IAAI,CAAC9B,WAAW,CAAC,CACjB8B,IAAI,CAACnB,SAAS,CAAC,CACfmB,IAAI,CAACX,sBAAsB,CAAC,CAC5BY,KAAK,CAAEC,KAAgB,IAAK;MACzB3B,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAG0B,KAAK,CAAC;MACxC,MAAM,IAAItB,KAAK,CACX,+DACJ,CAAC;IACL,CAAC,CAAC;EACV,CAAC;EACDuB,GAAGA,CAACC,OAAgB,EAAE;IAClB,OAAOL,KAAK,CAAE,GAAEhC,GAAI,IAAGqC,OAAO,CAACC,EAAG,EAAC,EAAE;MACjCC,MAAM,EAAE,KAAK;MACbC,IAAI,EAAE9B,IAAI,CAACC,SAAS,CAAC0B,OAAO,CAAC;MAC7BI,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CACGR,IAAI,CAAC9B,WAAW,CAAC,CACjB8B,IAAI,CAACnB,SAAS,CAAC,CACfoB,KAAK,CAAEC,KAAgB,IAAK;MACzB3B,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAG0B,KAAK,CAAC;MACxC,MAAM,IAAItB,KAAK,CACX,4DACJ,CAAC;IACL,CAAC,CAAC;EAEV;AACJ,CAAC;AAED,SAASe,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}