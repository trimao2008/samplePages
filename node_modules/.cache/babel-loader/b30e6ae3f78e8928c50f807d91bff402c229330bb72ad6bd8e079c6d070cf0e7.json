{"ast":null,"code":"var _jsxFileName = \"/Users/trimao/Documents/samplePages/src/home/HomePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { LaunchDarklyApi } from '../launchdarkly/LaunchDarklyApi';\nimport { LaunchDarkly } from '../launchdarkly/LaunchDarkly';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  var _ldItems$items;\n  const [ldItems, setLdItems] = useState();\n  const [loading, setLoading] = useState(Boolean);\n  useEffect(() => {\n    async function loadProjects() {\n      setLoading(true);\n      try {\n        const data = await LaunchDarklyApi.get('hlex', 'sit-1');\n        setLdItems(new LaunchDarkly(data));\n      } catch (e) {\n        if (e instanceof Error) {\n          console.log(e.message);\n        }\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadProjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Search:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), !loading && /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Flag Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), ldItems === null || ldItems === void 0 ? void 0 : (_ldItems$items = ldItems.items) === null || _ldItems$items === void 0 ? void 0 : _ldItems$items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: item.key,\n              id: item.key,\n              checked: item.environments['sit-1'].on,\n              onChange: () => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-center-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"spinner primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(HomePage, \"Jj63UXU00TlGqLXvPKlqCpE3rbY=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","LaunchDarklyApi","LaunchDarkly","jsxDEV","_jsxDEV","HomePage","_s","_ldItems$items","ldItems","setLdItems","loading","setLoading","Boolean","loadProjects","data","get","e","Error","console","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","items","map","item","key","type","name","id","checked","environments","on","onChange","description","className","_c","$RefreshReg$"],"sources":["/Users/trimao/Documents/samplePages/src/home/HomePage.tsx"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { LaunchDarklyApi } from '../launchdarkly/LaunchDarklyApi';\nimport { LaunchDarkly } from '../launchdarkly/LaunchDarkly';\n\nfunction HomePage() {\n\n    const [ldItems, setLdItems] = useState<LaunchDarkly>();\n    const [loading, setLoading] = useState(Boolean);\n\n    useEffect(() => {\n        async function loadProjects() {\n            setLoading(true);\n            try {\n                const data = await LaunchDarklyApi.get('hlex', 'sit-1');\n                setLdItems(new LaunchDarkly(data));\n            } catch (e) {\n                if (e instanceof Error) {\n                    console.log(e.message);\n                }\n            } finally {\n                setLoading(false);\n            }n        }\n        loadProjects();\n    }, []);\n\n    return (\n        <Fragment>\n            <div>\n                <span>Search:</span>\n                {!loading && (<table>\n                    <tr>\n                        <th>Flag Name</th>\n                        <th>Status</th>\n                        <th>Description</th>\n                    </tr>\n                    {ldItems?.items?.map((item) =>\n                        <tr>\n                            <td>{item.key}</td>\n                            <td>\n                                <input type=\"checkbox\" name={item.key} id={item.key} checked={item.environments['sit-1'].on} onChange={() => {}} />\n                            </td>\n                            <td>{item.description}</td>\n                        </tr>\n                    )}\n                </table>)}\n            </div>\n            {loading && (\n                <div className=\"top-center-page\">\n                    <span className=\"spinner primary\"></span>\n                    <p>Loading...</p>\n                </div>\n            )}\n\n        </Fragment>\n    );\n}\n\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}