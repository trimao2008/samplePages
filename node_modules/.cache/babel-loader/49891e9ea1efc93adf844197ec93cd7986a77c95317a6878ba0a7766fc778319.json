{"ast":null,"code":"import { LaunchDarkly } from \"./LaunchDarkly\";\nconst baseUrl = 'https://app.launchdarkly.com';\nconst fetchAllFlagUrl = `${baseUrl}/api/v2/flags/`;\nfunction translateStatusToErrorMessage(status) {\n  switch (status) {\n    case 401:\n      return 'Please login again.';\n    case 403:\n      return 'You do not have permission to view the project(s).';\n    default:\n      return 'There was an error retrieving the project(s). Please try again.';\n  }\n}\nfunction checkStatus(response) {\n  if (response.ok) {\n    return response;\n  } else {\n    const httpErrorInfo = {\n      status: response.status,\n      statusText: response.statusText,\n      url: response.url\n    };\n    console.log(`log server http error: ${JSON.stringify(httpErrorInfo)}`);\n    let errorMessage = translateStatusToErrorMessage(httpErrorInfo.status);\n    throw new Error(errorMessage);\n  }\n}\nfunction parseJSON(response) {\n  return response.json();\n}\nfunction convertToLaunchDarklyModel(item) {\n  return new LaunchDarkly(item);\n}\nconst LaunchDarklyApi = {\n  get(projectKey = 'default', env = 'test') {\n    return fetch(`${fetchAllFlagUrl}${projectKey}?filter=filterEnv:${env}`, {\n      headers: {\n        'Authorization': 'api-c1a2bfe4-809e-4a37-aa49-2b466b69d686'\n      }\n    }).then(checkStatus).then(parseJSON).then(convertToLaunchDarklyModel).catch(error => {\n      console.log('log client error ' + error);\n      throw new Error('There was an error retrieving the projects. Please try again.');\n    });\n  }\n};\nexport { LaunchDarklyApi };","map":{"version":3,"names":["LaunchDarkly","baseUrl","fetchAllFlagUrl","translateStatusToErrorMessage","status","checkStatus","response","ok","httpErrorInfo","statusText","url","console","log","JSON","stringify","errorMessage","Error","parseJSON","json","convertToLaunchDarklyModel","item","LaunchDarklyApi","get","projectKey","env","fetch","headers","then","catch","error"],"sources":["/Users/trimao/Documents/samplePages/src/launchdarkly/LaunchDarklyApi.ts"],"sourcesContent":["import { error } from \"console\";\nimport { LaunchDarkly } from \"./LaunchDarkly\";\n\nconst baseUrl = 'https://app.launchdarkly.com';\nconst fetchAllFlagUrl = `${baseUrl}/api/v2/flags/`;\n\nfunction translateStatusToErrorMessage(status: number) {\n    switch (status) {\n        case 401:\n            return 'Please login again.';\n        case 403:\n            return 'You do not have permission to view the project(s).';\n        default:\n            return 'There was an error retrieving the project(s). Please try again.';\n    }\n}\n\nfunction checkStatus(response: any) {\n    if (response.ok) {\n        return response;\n    } else {\n        const httpErrorInfo = {\n            status: response.status,\n            statusText: response.statusText,\n            url: response.url,\n        };\n        console.log(`log server http error: ${JSON.stringify(httpErrorInfo)}`);\n        let errorMessage = translateStatusToErrorMessage(httpErrorInfo.status);\n        throw new Error(errorMessage);\n    }\n}\n\nfunction parseJSON(response: Response) {\n    return response.json();\n}\n\nfunction convertToLaunchDarklyModel(item: any): LaunchDarkly {\n    return new LaunchDarkly(item);\n}\n\nconst LaunchDarklyApi = {\n    get(projectKey = 'default', env = 'test') {\n        return fetch(`${fetchAllFlagUrl}${projectKey}?filter=filterEnv:${env}`, {\n            headers: {\n                'Authorization': 'api-c1a2bfe4-809e-4a37-aa49-2b466b69d686'\n            }\n        })\n            .then(checkStatus)\n            .then(parseJSON)\n            .then(convertToLaunchDarklyModel)\n            .catch((error: TypeError) => {\n                console.log('log client error ' + error);\n                throw new Error(\n                    'There was an error retrieving the projects. Please try again.'\n                );\n            });\n    }\n}\n\nexport { LaunchDarklyApi }"],"mappings":"AACA,SAASA,YAAY,QAAQ,gBAAgB;AAE7C,MAAMC,OAAO,GAAG,8BAA8B;AAC9C,MAAMC,eAAe,GAAI,GAAED,OAAQ,gBAAe;AAElD,SAASE,6BAA6BA,CAACC,MAAc,EAAE;EACnD,QAAQA,MAAM;IACV,KAAK,GAAG;MACJ,OAAO,qBAAqB;IAChC,KAAK,GAAG;MACJ,OAAO,oDAAoD;IAC/D;MACI,OAAO,iEAAiE;EAChF;AACJ;AAEA,SAASC,WAAWA,CAACC,QAAa,EAAE;EAChC,IAAIA,QAAQ,CAACC,EAAE,EAAE;IACb,OAAOD,QAAQ;EACnB,CAAC,MAAM;IACH,MAAME,aAAa,GAAG;MAClBJ,MAAM,EAAEE,QAAQ,CAACF,MAAM;MACvBK,UAAU,EAAEH,QAAQ,CAACG,UAAU;MAC/BC,GAAG,EAAEJ,QAAQ,CAACI;IAClB,CAAC;IACDC,OAAO,CAACC,GAAG,CAAE,0BAAyBC,IAAI,CAACC,SAAS,CAACN,aAAa,CAAE,EAAC,CAAC;IACtE,IAAIO,YAAY,GAAGZ,6BAA6B,CAACK,aAAa,CAACJ,MAAM,CAAC;IACtE,MAAM,IAAIY,KAAK,CAACD,YAAY,CAAC;EACjC;AACJ;AAEA,SAASE,SAASA,CAACX,QAAkB,EAAE;EACnC,OAAOA,QAAQ,CAACY,IAAI,CAAC,CAAC;AAC1B;AAEA,SAASC,0BAA0BA,CAACC,IAAS,EAAgB;EACzD,OAAO,IAAIpB,YAAY,CAACoB,IAAI,CAAC;AACjC;AAEA,MAAMC,eAAe,GAAG;EACpBC,GAAGA,CAACC,UAAU,GAAG,SAAS,EAAEC,GAAG,GAAG,MAAM,EAAE;IACtC,OAAOC,KAAK,CAAE,GAAEvB,eAAgB,GAAEqB,UAAW,qBAAoBC,GAAI,EAAC,EAAE;MACpEE,OAAO,EAAE;QACL,eAAe,EAAE;MACrB;IACJ,CAAC,CAAC,CACGC,IAAI,CAACtB,WAAW,CAAC,CACjBsB,IAAI,CAACV,SAAS,CAAC,CACfU,IAAI,CAACR,0BAA0B,CAAC,CAChCS,KAAK,CAAEC,KAAgB,IAAK;MACzBlB,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAGiB,KAAK,CAAC;MACxC,MAAM,IAAIb,KAAK,CACX,+DACJ,CAAC;IACL,CAAC,CAAC;EACV;AACJ,CAAC;AAED,SAASK,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}