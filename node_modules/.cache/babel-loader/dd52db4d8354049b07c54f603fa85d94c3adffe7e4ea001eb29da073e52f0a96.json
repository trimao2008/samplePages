{"ast":null,"code":"var _jsxFileName = \"/Users/trimao/Documents/samplePages/src/projects/ProjectPage.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { MOCK_PROJECTS } from \"./MockProjects\";\nimport ProjectList from \"./ProjectList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProjectPages() {\n  _s();\n  const [projects, setProjects] = useState(MOCK_PROJECTS);\n  const saveProject = project => {\n    let updatedProjects = projects.map(p => {\n      return p.id === project.id ? project : p;\n    });\n    setProjects(updatedProjects);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProjectList, {\n      projects: projects,\n      onSave: saveProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ProjectPages, \"ht0HbwtThoMXlW6TBW43oBsrV0w=\");\n_c = ProjectPages;\nexport default ProjectPages;\nvar _c;\n$RefreshReg$(_c, \"ProjectPages\");","map":{"version":3,"names":["useState","MOCK_PROJECTS","ProjectList","jsxDEV","_jsxDEV","Fragment","_Fragment","ProjectPages","_s","projects","setProjects","saveProject","project","updatedProjects","map","p","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onSave","_c","$RefreshReg$"],"sources":["/Users/trimao/Documents/samplePages/src/projects/ProjectPage.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { MOCK_PROJECTS } from \"./MockProjects\";\nimport { Project } from \"./Project\";\nimport ProjectList from \"./ProjectList\";\n\nfunction ProjectPages() {\n    const [projects, setProjects] = useState<Project[]>(MOCK_PROJECTS);\n\n    const saveProject = (project: Project) => {\n        let updatedProjects = projects.map((p: Project) => {\n            return p.id === project.id ? project : p;\n        });\n        setProjects(updatedProjects);\n    }\n\n    return (\n        <>\n            <h1>Projects</h1>\n            <ProjectList projects={projects} onSave={saveProject}></ProjectList>\n        </>\n    );\n}\n\nexport default ProjectPages;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,gBAAgB;AAE9C,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAYC,aAAa,CAAC;EAElE,MAAMU,WAAW,GAAIC,OAAgB,IAAK;IACtC,IAAIC,eAAe,GAAGJ,QAAQ,CAACK,GAAG,CAAEC,CAAU,IAAK;MAC/C,OAAOA,CAAC,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,GAAGJ,OAAO,GAAGG,CAAC;IAC5C,CAAC,CAAC;IACFL,WAAW,CAACG,eAAe,CAAC;EAChC,CAAC;EAED,oBACIT,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBjB,OAAA,CAACF,WAAW;MAACO,QAAQ,EAAEA,QAAS;MAACa,MAAM,EAAEX;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC;EAAA,eACtE,CAAC;AAEX;AAACb,EAAA,CAhBQD,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAkBrB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}