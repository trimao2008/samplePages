{"ast":null,"code":"var _jsxFileName = \"/Users/trimao/Documents/samplePages/src/projects/ProjectForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Project } from \"./Project\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProjectForm({\n  onCancel,\n  onSave,\n  project: initProject\n}) {\n  _s();\n  const [project, setProject] = useState(initProject);\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSave(new Project({}));\n  };\n  const handleChange = event => {\n    const {\n      type,\n      name,\n      value,\n      checked\n    } = event.target;\n    // if input type is checkbox use checked\n    // otherwise it's type is text, number etc. so use value\n    let updatedValue = type === 'checkbox' ? checked : value;\n\n    //if input type is number convert the updatedValue string to a +number\n    if (type === 'number') {\n      updatedValue = Number(updatedValue);\n    }\n    const change = {\n      [name]: updatedValue\n    };\n    let updatedProject;\n    // need to do functional update b/c\n    // the new project state is based on the previous project state\n    // so we can keep the project properties that aren't being edited +like project.id\n    // the spread operator (...) is used to\n    // spread the previous project properties and the new change\n    setProject(p => {\n      updatedProject = new Project({\n        ...p,\n        ...change\n      });\n      return updatedProject;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-group vertical\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Project Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"enter name\",\n        value: project.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Project Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"enter description\",\n        value: project.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"budget\",\n        children: \"Project Budget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"budget\",\n        placeholder: \"enter budget\",\n        value: project.budget,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"isActive\",\n        children: \"Active?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"isActive\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary bordered medium\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"bordered medium\",\n          onClick: onCancel,\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(ProjectForm, \"sWHIg0eaRAIP3MX50tPiV5D7j84=\");\n_c = ProjectForm;\nexport default ProjectForm;\nvar _c;\n$RefreshReg$(_c, \"ProjectForm\");","map":{"version":3,"names":["React","useState","Project","jsxDEV","_jsxDEV","Fragment","_Fragment","ProjectForm","onCancel","onSave","project","initProject","_s","setProject","handleSubmit","event","preventDefault","handleChange","type","name","value","checked","target","updatedValue","Number","change","updatedProject","p","children","className","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","description","budget","onClick","_c","$RefreshReg$"],"sources":["/Users/trimao/Documents/samplePages/src/projects/ProjectForm.tsx"],"sourcesContent":["import React, { ChangeEvent, SyntheticEvent, useState } from \"react\";\nimport { Project } from \"./Project\";\n\ninterface ProjectFormProps {\n    project: Project;\n    onCancel: () => void;\n    onSave: (project: Project) => void;\n}\n\nfunction ProjectForm({ onCancel, onSave, project: initProject }: ProjectFormProps) {\n\n    const [project, setProject] = useState(initProject);\n\n    const handleSubmit = (event: any) => {\n        event.preventDefault();\n        onSave(new Project({}));\n\n    };\n\n    const handleChange = (event: any) => {\n        const { type, name, value, checked } = event.target;\n        // if input type is checkbox use checked\n        // otherwise it's type is text, number etc. so use value\n        let updatedValue = type === 'checkbox' ? checked : value;\n\n        //if input type is number convert the updatedValue string to a +number\n        if (type === 'number') {\n            updatedValue = Number(updatedValue);\n        }\n        const change = {\n            [name]: updatedValue,\n        };\n\n        let updatedProject: Project;\n        // need to do functional update b/c\n        // the new project state is based on the previous project state\n        // so we can keep the project properties that aren't being edited +like project.id\n        // the spread operator (...) is used to\n        // spread the previous project properties and the new change\n        setProject((p) => {\n            updatedProject = new Project({ ...p, ...change });\n            return updatedProject;\n        });\n    };\n\n    return (\n        <>\n            <form className=\"input-group vertical\" onSubmit={handleSubmit}>\n                <label htmlFor=\"name\">Project Name</label>\n                <input type=\"text\" name=\"name\" placeholder=\"enter name\" value={project.name} onChange={handleChange} />\n\n                <label htmlFor=\"description\">Project Description</label>\n                <textarea name=\"description\" placeholder=\"enter description\" value={project.description} onChange={handleChange}></textarea>\n\n                <label htmlFor=\"budget\">Project Budget</label>\n                <input type=\"number\" name=\"budget\" placeholder=\"enter budget\" value={project.budget} onChange={handleChange} />\n\n                <label htmlFor=\"isActive\">Active?</label>\n                <input type=\"checkbox\" name=\"isActive\" onChange={handleChange} />\n\n                <div className=\"input-group\">\n                    <button className=\"primary bordered medium\">Save</button>\n                    <span></span>\n                    <button type=\"button\" className=\"bordered medium\" onClick={onCancel}>cancel</button>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default ProjectForm;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}