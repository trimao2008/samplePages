{"ast":null,"code":"var _jsxFileName = \"/Users/trimao/Documents/samplePages/src/home/HomePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { LaunchDarklyApi } from '../launchdarkly/LaunchDarklyApi';\nimport { LaunchDarkly } from '../launchdarkly/LaunchDarkly';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  var _ldItems$items;\n  const [ldItems, setLdItems] = useState();\n  const [loading, setLoading] = useState(Boolean);\n  const [filterkey, setFilterKey] = useState(String);\n  useEffect(() => {\n    async function loadProjects() {\n      setLoading(true);\n      try {\n        const data = await LaunchDarklyApi.get('hlex', 'sit-1');\n        setLdItems(new LaunchDarkly(data));\n      } catch (e) {\n        if (e instanceof Error) {\n          console.log(e.message);\n        }\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadProjects();\n  }, []);\n  const handleFilter = event => {\n    setFilterKey(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"filter\",\n        placeholder: \"input your flag name or key\",\n        onChange: handleFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), !loading && /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Flag Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), ldItems === null || ldItems === void 0 ? void 0 : (_ldItems$items = ldItems.items) === null || _ldItems$items === void 0 ? void 0 : _ldItems$items.filter(item => item.key.includes(filterkey)).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: item.key,\n              id: item.key,\n              checked: item.environments['sit-1'].on,\n              onChange: () => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-center-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"spinner primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(HomePage, \"YvcgvltgI08/R6UwDR7rjNVAVTM=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","LaunchDarklyApi","LaunchDarkly","jsxDEV","_jsxDEV","HomePage","_s","_ldItems$items","ldItems","setLdItems","loading","setLoading","Boolean","filterkey","setFilterKey","String","loadProjects","data","get","e","Error","console","log","message","handleFilter","event","target","value","children","name","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","items","filter","item","key","includes","map","type","id","checked","environments","on","description","className","_c","$RefreshReg$"],"sources":["/Users/trimao/Documents/samplePages/src/home/HomePage.tsx"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { LaunchDarklyApi } from '../launchdarkly/LaunchDarklyApi';\nimport { LaunchDarkly } from '../launchdarkly/LaunchDarkly';\n\nfunction HomePage() {\n\n    const [ldItems, setLdItems] = useState<LaunchDarkly>();\n    const [loading, setLoading] = useState(Boolean);\n    const [filterkey, setFilterKey] = useState(String);\n\n    useEffect(() => {\n        async function loadProjects() {\n            setLoading(true);\n            try {\n                const data = await LaunchDarklyApi.get('hlex', 'sit-1');\n                setLdItems(new LaunchDarkly(data));\n            } catch (e) {\n                if (e instanceof Error) {\n                    console.log(e.message);\n                }\n            } finally {\n                setLoading(false);\n            }                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           \n        }\n        loadProjects();\n    }, []);\n\n    const handleFilter = (event: any) => {\n       setFilterKey(event.target.value);\n    }\n\n    return (\n        <Fragment>\n            <div>\n                <input name='filter' placeholder='input your flag name or key' onChange={handleFilter}/>\n                {!loading && (<table>\n                    <tr>\n                        <th>Flag Name</th>\n                        <th>Status</th>\n                        <th>Description</th>\n                    </tr>\n                    {ldItems?.items?.filter((item) => item.key.includes(filterkey)).map((item) =>\n                        <tr>\n                            <td>{item.key}</td>\n                            <td>\n                                <input type=\"checkbox\" name={item.key} id={item.key} checked={item.environments['sit-1'].on} onChange={() => {}} />\n                            </td>\n                            <td>{item.description}</td>\n                        </tr>\n                    )}\n                </table>)}\n            </div>\n            {loading && (\n                <div className=\"top-center-page\">\n                    <span className=\"spinner primary\"></span>\n                    <p>Loading...</p>\n                </div>\n            )}\n\n        </Fragment>\n    );\n}\n\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}